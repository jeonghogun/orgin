services:
  db:
    image: pgvector/pgvector:pg16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    env_file:
      - .env

  test-db:
    image: pgvector/pgvector:pg16
    volumes:
      - test_postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=test_origin_db
    ports:
      - "5433:5432"
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  pgbouncer:
    image: pgbouncer/pgbouncer
    ports:
      - "6432:6432"
    environment:
      - DATABASES_HOST=db
      - DATABASES_PORT=5432
      - DATABASES_USER=${POSTGRES_USER}
      - DATABASES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASES_DBNAME=${POSTGRES_DB}
      - POOL_MODE=session
      - LISTEN_ADDR=0.0.0.0
      - LISTEN_PORT=6432
      - AUTH_TYPE=plain
      - SERVER_RESET_QUERY=DISCARD ALL
    depends_on:
      - db
    env_file:
      - .env

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app/static:/usr/share/nginx/html
    depends_on:
      - api

  api:
    build: .
    command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.main:app --bind 0.0.0.0:8000
    volumes:
      - ./app:/app/app
      - ./scripts:/app/scripts
      - ./pyproject.toml:/app/pyproject.toml
      - ~/.config/gcloud:/root/.config/gcloud:ro
    ports:
      - "8000:8000" # Expose for direct access if needed, but primary access is via nginx
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/${POSTGRES_DB}
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    env_file:
      - .env
    depends_on:
      - pgbouncer
      - redis

  worker-default:
    build: .
    command: celery -A app.celery_app worker --loglevel=INFO -P gevent -Q default
    volumes:
      - .:/app
      - ~/.config/gcloud:/root/.config/gcloud:ro
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/${POSTGRES_DB}
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    env_file:
      - .env
    depends_on:
      - pgbouncer
      - redis

  worker-high-priority:
    build: .
    command: celery -A app.celery_app worker --loglevel=INFO -P gevent -Q high_priority
    volumes:
      - .:/app
      - ~/.config/gcloud:/root/.config/gcloud:ro
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/${POSTGRES_DB}
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    env_file:
      - .env
    depends_on:
      - pgbouncer
      - redis

  worker-low-priority:
    build: .
    command: celery -A app.celery_app worker --loglevel=INFO -P gevent -Q low_priority
    volumes:
      - .:/app
      - ~/.config/gcloud:/root/.config/gcloud:ro
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgbouncer:6432/${POSTGRES_DB}
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    env_file:
      - .env
    depends_on:
      - pgbouncer
      - redis

volumes:
  postgres_data:
  test_postgres_data:
