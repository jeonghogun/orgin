"""Add conversation tables

Revision ID: b2c3d4e5f6a7
Revises: e9681d25ea5c
Create Date: 2025-09-06 13:32:00.123456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.types import UserDefinedType
import pgvector

class VectorType(UserDefinedType):
    def get_col_spec(self, **kw):
        return "VECTOR(1536)"

# revision identifiers, used by Alembic.
revision: str = 'b2c3d4e5f6a7'
down_revision: Union[str, None] = 'e9681d25ea5c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto-generated by Alembic - please adjust! ###

    # Create attachments table
    op.create_table('attachments',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('kind', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('mime', sa.String(), nullable=False),
        sa.Column('size', sa.Integer(), nullable=False),
        sa.Column('url', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attachments_created_at'), 'attachments', ['created_at'], unique=False)

    # Create conversation_threads table
    op.create_table('conversation_threads',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('sub_room_id', sa.String(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('pinned', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['sub_room_id'], ['rooms.room_id'], name=op.f('fk_conversation_threads_sub_room_id_rooms'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_threads_created_at'), 'conversation_threads', ['created_at'], unique=False)
    op.create_index(op.f('ix_conversation_threads_sub_room_id'), 'conversation_threads', ['sub_room_id'], unique=False)

    # Create conversation_messages table
    op.create_table('conversation_messages',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('thread_id', sa.String(), nullable=False),
        sa.Column('role', sa.String(), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('model', sa.String(), nullable=True),
        sa.Column('status', sa.String(), server_default='draft', nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(['thread_id'], ['conversation_threads.id'], name=op.f('fk_conversation_messages_thread_id_conversation_threads'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_messages_created_at'), 'conversation_messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_conversation_messages_thread_id'), 'conversation_messages', ['thread_id'], unique=False)

    # Create attachment_chunks table for RAG
    op.create_table('attachment_chunks',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('attachment_id', sa.String(), nullable=False),
        sa.Column('chunk_text', sa.Text(), nullable=False),
        sa.Column('embedding', VectorType(), nullable=True), # Assuming OpenAI ada-002 size
        sa.ForeignKeyConstraint(['attachment_id'], ['attachments.id'], name=op.f('fk_attachment_chunks_attachment_id_attachments'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attachment_chunks_attachment_id'), 'attachment_chunks', ['attachment_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto-generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_attachment_chunks_attachment_id'), table_name='attachment_chunks')
    op.drop_table('attachment_chunks')

    op.drop_index(op.f('ix_conversation_messages_thread_id'), table_name='conversation_messages')
    op.drop_index(op.f('ix_conversation_messages_created_at'), table_name='conversation_messages')
    op.drop_table('conversation_messages')

    op.drop_index(op.f('ix_conversation_threads_sub_room_id'), table_name='conversation_threads')
    op.drop_index(op.f('ix_conversation_threads_created_at'), table_name='conversation_threads')
    op.drop_table('conversation_threads')

    op.drop_index(op.f('ix_attachments_created_at'), table_name='attachments')
    op.drop_table('attachments')
    # ### end Alembic commands ###
